<?xml version="1.0" encoding="UTF-8"?>
<model version="5.3.0" links="1">
 <!--${qpc}-->
 <framework name="qpc"/>
 <!--${AOs}-->
 <package name="AOs" stereotype="0x02">
  <!--${AOs::Led}-->
  <class name="Led" superclass="qpc::QMActive">
   <!--${AOs::Led::timeEvt}-->
   <attribute name="timeEvt" type="QTimeEvt" visibility="0x02" properties="0x00"/>
   <!--${AOs::Led::SM}-->
   <statechart properties="0x01">
    <!--${AOs::Led::SM::initial}-->
    <initial target="../1">
     <action>(void)par; /* unused parameter */

QActive* parent = &amp;me-&gt;super.super; 

QActive_subscribe(parent, LED_ON_SIG);
QActive_subscribe(parent, LED_OFF_SIG);
QActive_subscribe(parent, LED_BLINK_SIG);</action>
     <initial_glyph conn="5,3,4,0,9">
      <action box="0,-2,6,2"/>
     </initial_glyph>
    </initial>
    <!--${AOs::Led::SM::off}-->
    <state name="off">
     <entry>BSP_Led_off();</entry>
     <!--${AOs::Led::SM::off::LED_BLINK}-->
     <tran trig="LED_BLINK" target="../../3">
      <tran_glyph conn="18,16,1,0,20,4">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="2,12,16,11">
      <entry box="1,2,12,4"/>
     </state_glyph>
    </state>
    <!--${AOs::Led::SM::on}-->
    <state name="on">
     <entry>BSP_Led_on();</entry>
     <!--${AOs::Led::SM::on::LED_BLINK}-->
     <tran trig="LED_BLINK" target="../../3">
      <tran_glyph conn="18,34,1,2,20,-3">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="2,29,16,10">
      <entry box="1,2,12,4"/>
     </state_glyph>
    </state>
    <!--${AOs::Led::SM::blink}-->
    <smstate name="blink" submachine="../4">
     <!--${AOs::Led::SM::blink::LED_OFF}-->
     <tran trig="LED_OFF" target="../../1">
      <tran_glyph conn="42,20,0,0,-10,-30,2">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <!--${AOs::Led::SM::blink::LED_ON}-->
     <tran trig="LED_ON" target="../../2">
      <tran_glyph conn="42,31,2,2,10,-30,-2">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <smstate_glyph node="30,20,16,11"/>
    </smstate>
    <!--${AOs::Led::SM::blinking}-->
    <submachine name="blinking">
     <entry>QTimeEvt_armX(&amp;me-&gt;timeEvt,
    BSP_TICKS_PER_SEC / 2U,
    BSP_TICKS_PER_SEC / 2U);</entry>
     <exit>QTimeEvt_disarm(&amp;me-&gt;timeEvt);</exit>
     <!--${AOs::Led::SM::blinking::initial}-->
     <initial target="../1">
      <initial_glyph conn="7,7,5,0,9,4">
       <action box="0,-2,10,2"/>
      </initial_glyph>
     </initial>
     <!--${AOs::Led::SM::blinking::off}-->
     <state name="off">
      <entry>BSP_Led_off();</entry>
      <!--${AOs::Led::SM::blinking::off::LED_TIMEOUT}-->
      <tran trig="LED_TIMEOUT" target="../../2">
       <tran_glyph conn="27,17,1,3,24">
        <action box="0,-2,10,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="6,11,21,27">
       <entry box="1,2,6,2"/>
      </state_glyph>
     </state>
     <!--${AOs::Led::SM::blinking::on}-->
     <state name="on">
      <entry>BSP_Led_on();</entry>
      <!--${AOs::Led::SM::blinking::on::LED_TIMEOUT}-->
      <tran trig="LED_TIMEOUT" target="../../1">
       <tran_glyph conn="51,31,3,1,-24">
        <action box="0,-2,10,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="51,11,23,27">
       <entry box="1,2,6,2"/>
      </state_glyph>
     </state>
     <submachine_diagram size="75,45">
      <entry box="1,2,6,2"/>
      <exit box="1,4,6,2"/>
     </submachine_diagram>
    </submachine>
    <state_diagram size="61,44"/>
   </statechart>
  </class>
  <!--${AOs::Led_ctor}-->
  <operation name="Led_ctor" type="void" visibility="0x00" properties="0x01">
   <documentation>The Blinky &quot;constructor&quot; is provided outside of the Blinky class, so that it can be used independently from the class. This is part of the &quot;opaque pointer&quot; design idiom.</documentation>
   <code>Led *me = (Led *)AO_led;
QMActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;Led_initial));
QTimeEvt_ctorX(&amp;me-&gt;timeEvt, &amp;me-&gt;super.super, LED_TIMEOUT_SIG, 0U);</code>
  </operation>
 </package>
 <!--${.}-->
 <directory name=".">
  <!--${.::led}-->
  <directory name="led">
   <!--${.::led::led_ao.c}-->
   <file name="led_ao.c">
    <text>#include &quot;qpc.h&quot;    /* QP/C framework API */
#include &quot;bsp_qpc.h&quot; /* Board Support Package interface */
#include &quot;led_ao.h&quot;

/* Prototypes */
void Led_ctor(void);

/* ask QM to declare the Blinky class --------------------------------------*/
$declare${AOs::Led}

/* instantiate the Blinky active object ------------------------------------*/
static Led l_led;
QMActive * const AO_led = &amp;l_led.super;

/* ask QM to define the Blinky class ---------------------------------------*/
$define${AOs::Led_ctor}
$define${AOs::Led}</text>
   </file>
   <!--${.::led::led_ao.h}-->
   <file name="led_ao.h">
    <text>#ifndef _LED_AO_H
#define _LED_AO_H

#include &quot;app_signals.h&quot;

enum LedSignals {
  LED_ON_SIG = APP_LED_ON_SIG,
  LED_BLINK_SIG = APP_LED_BLINK_SIG,
  LED_OFF_SIG = APP_LED_OFF_SIG,
  LED_TIMEOUT_SIG = APP_MAX_SIG
};

#endif</text>
   </file>
  </directory>
 </directory>
</model>
