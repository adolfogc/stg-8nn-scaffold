# Copyright (C) 2018 Adolfo E. Garc√≠a
#
# This file is part of STG-8nn-Scaffold.
#
# STG-8nn-Scaffold is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# STG-8nn-Scaffold is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with STG-8nn-Scaffold.  If not, see <https://www.gnu.org/licenses/>.

##
## dependencies::stm32cube
##

set(STM32CUBE_DIR dependencies/stm32cube)
set(STM32CUBE_LIBRARY stm32cube)

set(STM32CUBE_INCLUDE
  ${STM32CUBE_DIR}/cmsis/core/include
  ${STM32CUBE_DIR}/cmsis/device/include
  ${STM32CUBE_DIR}/hal/include
)

## CMSIS Core include
set(STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/cmsis/core/include/cmsis_gcc.h
  ${STM32CUBE_DIR}/cmsis/core/include/core_cm0.h
  ${STM32CUBE_DIR}/cmsis/core/include/core_cmFunc.h
  ${STM32CUBE_DIR}/cmsis/core/include/core_cmInstr.h
)

## CMSIS Device include
list(APPEND STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/cmsis/device/include/stm32f0xx.h
  ${STM32CUBE_DIR}/cmsis/device/include/stm32f091xc.h
  ${STM32CUBE_DIR}/cmsis/device/include/system_stm32f0xx.h
)

## CMSIS Device src
list(APPEND STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/cmsis/device/src/system_stm32f0xx.c
)

if ("${CMAKE_C_COMPILER_ID}" STREQUAL "GNU")
  list(APPEND STM32CUBE_SOURCES ${STM32CUBE_DIR}/gnu/startup_stm32f091xc.c)
endif()

## HAL include
list(APPEND STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_adc_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_adc.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_can.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_conf.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_cortex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_crc_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_crc.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_def.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_dma_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_dma.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_flash_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_flash.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_gpio_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_gpio.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_i2c_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_i2c.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_irda_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_irda.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_iwdg.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_pwr_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_pwr.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_rcc_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_rcc.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_rtc_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_rtc.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_tim_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_tim.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_uart_ex.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_uart.h
  ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal.h
)

## HAL src
list(APPEND STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_adc_ex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_adc.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_can.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_cortex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_dma.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_flash_ex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_flash.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_gpio.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_i2c_ex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_i2c.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_irda.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_iwdg.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_pwr_ex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_pwr.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_rcc_ex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_rcc.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_rtc_ex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_rtc.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_tim_ex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_tim.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_uart_ex.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_uart.c
  ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal.c
)

add_library(${STM32CUBE_LIBRARY} STATIC ${STM32CUBE_SOURCES})
target_include_directories(${STM32CUBE_LIBRARY} PRIVATE ${STM32CUBE_INCLUDE})

set(QPC_DIR dependencies/qpc)
target_include_directories(${STM32CUBE_LIBRARY} PRIVATE ${QPC_DIR}/include)

##
## linker script
##
add_custom_command(
  TARGET ${STM32CUBE_LIBRARY} PRE_LINK
  COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/gcc_arm.ld ${PROJECT_BINARY_DIR}/gcc_arm.ld
)
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -nostartfiles -Tgcc_arm.ld -Xlinker -Map=gcc_arm.map")
