# Copyright (C) 2018 Adolfo E. Garc√≠a
#
# This file is part of STG-8nn-Scaffold.
#
# STG-8nn-Scaffold is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# STG-8nn-Scaffold is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with STG-8nn-Scaffold.  If not, see <https://www.gnu.org/licenses/>.

##
## select STM32 HAL's modules
##

if("${STG_MODEL}" MATCHES "850" OR "${STG_MODEL}" MATCHES "856")
  set(USE_HAL TRUE)
  set(USE_HAL_ADC FALSE)
  set(USE_HAL_CAN FALSE)
  set(USE_HAL_IWDG FALSE)
  set(USE_HAL_RTC FALSE)
  set(USE_HAL_TIM FALSE)
  set(USE_HAL_UART FALSE)
  set(USE_HAL_IRDA FALSE)
  set(USE_HAL_CORTEX TRUE)
  set(USE_HAL_DMA FALSE)
  set(USE_HAL_FLASH TRUE)
  set(USE_HAL_GPIO TRUE)
  set(USE_HAL_PWR FALSE)
  set(USE_HAL_RCC TRUE)
  set(USE_HAL_I2C FALSE)
  set(USE_HAL_CRC FALSE)
endif()

##
## dependencies::stm32cube
##

set(STM32CUBE_DIR dependencies/stm32cube)

set(STM32CUBE_INCLUDE
  ${STM32CUBE_DIR}/cmsis/core/include
  ${STM32CUBE_DIR}/cmsis/device/include
  ${STM32CUBE_DIR}/hal/include
  ${STM32CUBE_DIR}/ll/include
)

## CMSIS Core include
set(STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/cmsis/core/include/cmsis_gcc.h
  ${STM32CUBE_DIR}/cmsis/core/include/core_cm0.h
  ${STM32CUBE_DIR}/cmsis/core/include/core_cmFunc.h
  ${STM32CUBE_DIR}/cmsis/core/include/core_cmInstr.h
)

## CMSIS Device include
list(APPEND STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/cmsis/device/include/stm32f0xx.h
  ${STM32CUBE_DIR}/cmsis/device/include/stm32f091xc.h
  ${STM32CUBE_DIR}/cmsis/device/include/system_stm32f0xx.h
)

## CMSIS Device src
list(APPEND STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/cmsis/device/src/system_stm32f0xx.c
)

if ("${CMAKE_C_COMPILER_ID}" STREQUAL "GNU")
  list(APPEND STM32CUBE_SOURCES ${STM32CUBE_DIR}/gnu/startup_stm32f091xc.s)
endif()

## LL
add_definitions(-DUSE_FULL_LL_DRIVER) # enable LL initialization functions and associated resources

list(APPEND STM32CUBE_SOURCES
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_adc.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_bus.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_cortex.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_crs.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_dma.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_exti.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_gpio.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_i2c.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_iwdg.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_pwr.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_rcc.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_rtc.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_system.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_tim.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_usart.h
  ${STM32CUBE_DIR}/ll/include/stm32f0xx_ll_utils.h
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_adc.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_dma.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_exti.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_gpio.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_i2c.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_rcc.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_rtc.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_tim.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_usart.c
  ${STM32CUBE_DIR}/ll/src/stm32f0xx_ll_utils.c
)

## HAL
if(USE_HAL)
  add_definitions(-DHAL_MODULE_ENABLED)
  list(APPEND STM32CUBE_SOURCES
    ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_def.h
    ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal.h
    ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal.c
  )
  if(USE_HAL_ADC)
    add_definitions(-DHAL_ADC_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_adc_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_adc.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_adc_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_adc.c
    )
  endif()
  if(USE_HAL_CAN)
    add_definitions(-DHAL_CAN_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_can.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_can.c
    )
  endif()
  if(USE_HAL_CRC)
    add_definitions(-DHAL_CRC_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_crc_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_crc.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_crc_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_crc.c
    )
  endif()
  if(USE_HAL_IWDG)
    add_definitions(-DHAL_IWDG_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_iwdg.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_iwdg.c
    )
  endif()
  if(USE_HAL_RTC)
    add_definitions(-DHAL_RTC_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_rtc_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_rtc.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_rtc_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_rtc.c
    )
  endif()
  if(USE_HAL_TIM)
    add_definitions(-DHAL_TIM_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_tim_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_tim.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_tim_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_tim.c
    )
  endif()
  if(USE_HAL_UART)
    add_definitions(-DHAL_UART_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_uart_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_uart.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_uart_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_uart.c
    )
  endif()
  if(USE_HAL_IRDA)
    add_definitions(-DHAL_IRDA_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_irda_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_irda.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_irda.c
    )
  endif()
  if(USE_HAL_CORTEX)
    add_definitions(-DHAL_CORTEX_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_cortex.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_cortex.c
    )
  endif()
  if(USE_HAL_DMA)
    add_definitions(-DHAL_DMA_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_dma_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_dma.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_dma.c
    )
  endif()
  if(USE_HAL_FLASH)
    add_definitions(-DHAL_FLASH_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_flash_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_flash.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_flash_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_flash.c
    )
  endif()
  if(USE_HAL_GPIO)
    add_definitions(-DHAL_GPIO_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_gpio_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_gpio.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_gpio.c
    )
  endif()
  if(USE_HAL_PWR)
    add_definitions(-DHAL_PWR_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_pwr_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_pwr.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_pwr_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_pwr.c
    )
  endif()
  if(USE_HAL_RCC)
    add_definitions(-DHAL_RCC_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_rcc_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_rcc.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_rcc_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_rcc.c
    )
  endif()
  if(USE_HAL_I2C)
    add_definitions(-DHAL_I2C_MODULE_ENABLED)
    list(APPEND STM32CUBE_SOURCES
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_i2c_ex.h
      ${STM32CUBE_DIR}/hal/include/stm32f0xx_hal_i2c.h
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_i2c_ex.c
      ${STM32CUBE_DIR}/hal/src/stm32f0xx_hal_i2c.c
    )
  endif()
endif()
